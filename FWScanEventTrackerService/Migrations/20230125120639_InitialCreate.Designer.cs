// <auto-generated />
using System;
using FWScan.EventTrackerService.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FWScan.EventTrackerService.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230125120639_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.13");

            modelBuilder.Entity("FWScan.Models.Device", b =>
                {
                    b.Property<long>("DeviceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("DeviceTransactionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DeviceId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("FWScan.Models.ScanEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<long>("DeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ParcelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StatusCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("UserId");

                    b.ToTable("ScanEvents");
                });

            modelBuilder.Entity("FWScan.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CarrierId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RunId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FWScan.Models.ScanEvent", b =>
                {
                    b.HasOne("FWScan.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FWScan.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Device");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
